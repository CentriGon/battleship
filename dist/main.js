(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"body {\n    margin: 0px;\n    display: flex;\n    flex-direction: column;\n}\n\n.header {\n    width: 100vw;\n    height: 12vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 5px 5px gray;\n}\n\n.boardContainers {\n    width: 100vw;\n    height: 88vh;\n    display: flex;\n}\n\n.rightSide {\n    background-color: red;\n}\n\n.leftSide {\n    background-color: blue;\n}\n\n.rightSide,\n.leftSide {\n    flex: auto;\n    width: 50%;\n    margin: 50px;\n    padding: 30px;\n    padding-top: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    font-size: 20px\n}\n\n.rightBoxes,\n.leftBoxes,\n.middleBoxes {\n    height: 80%;\n    width: 80%;\n    background-color: white;\n    display: flex;\n    flex-wrap:wrap;\n}\n\n.tile {\n    flex: auto;\n    min-width: 5.7%;\n    min-height: 5%;\n    background-color: black;\n    border: .5px solid white;\n}\n\n.tile:hover {\n    background-color: gray;\n}\n\n.coverScreen {\n    background-color: rgba(41, 41, 41, 0);\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    content-visibility: hidden;\n}\n\n.insideCover {\n    width: 30vw;\n    height: 70vh;\n    border-radius: 10px;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.selectedTile {\n    background-color: orange\n}\n\n.middleBoxes {\n    height: 70%;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,oCAAoC;IACpC,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;;IAEI,UAAU;IACV,UAAU;IACV,YAAY;IACZ,aAAa;IACb,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ;AACJ;;AAEA;;;IAGI,WAAW;IACX,UAAU;IACV,uBAAuB;IACvB,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,eAAe;IACf,cAAc;IACd,uBAAuB;IACvB,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,qCAAqC;IACrC,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,0BAA0B;AAC9B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI;AACJ;;AAEA;IACI,WAAW;AACf",sourcesContent:["body {\n    margin: 0px;\n    display: flex;\n    flex-direction: column;\n}\n\n.header {\n    width: 100vw;\n    height: 12vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 5px 5px gray;\n}\n\n.boardContainers {\n    width: 100vw;\n    height: 88vh;\n    display: flex;\n}\n\n.rightSide {\n    background-color: red;\n}\n\n.leftSide {\n    background-color: blue;\n}\n\n.rightSide,\n.leftSide {\n    flex: auto;\n    width: 50%;\n    margin: 50px;\n    padding: 30px;\n    padding-top: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    font-size: 20px\n}\n\n.rightBoxes,\n.leftBoxes,\n.middleBoxes {\n    height: 80%;\n    width: 80%;\n    background-color: white;\n    display: flex;\n    flex-wrap:wrap;\n}\n\n.tile {\n    flex: auto;\n    min-width: 5.7%;\n    min-height: 5%;\n    background-color: black;\n    border: .5px solid white;\n}\n\n.tile:hover {\n    background-color: gray;\n}\n\n.coverScreen {\n    background-color: rgba(41, 41, 41, 0);\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    content-visibility: hidden;\n}\n\n.insideCover {\n    width: 30vw;\n    height: 70vh;\n    border-radius: 10px;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.selectedTile {\n    background-color: orange\n}\n\n.middleBoxes {\n    height: 70%;\n}\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=r(n,o),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),s=t.n(c),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;let h=[],g=[];new function(n,e){this.length=6,this.isDown=!1,this.coordinates=[10,20,30,40,50,60]}(6,[10,20,30,40,50,60]),function(){const n=function(){!function(){const n=document.querySelector(".rightBoxes"),e=document.querySelector(".leftBoxes");document.querySelector(".middleBoxes");for(let n=0;n<224;n++){let t=document.createElement("div");t.setAttribute("class","leftTile tile"),t.setAttribute("id",n),e.appendChild(t),h[n]=t}for(let e=0;e<224;e++){let t=document.createElement("div");t.setAttribute("class","rightTile tile"),t.setAttribute("id","r"+e),n.appendChild(t),g[e]=t}}();let n=[[0,16,32,48,64,80],[153,154,155,156,157],[30,46,62,78],[84,100,116],[105,106],[215,216]];n.forEach(((e,t)=>{n[t].forEach(((e,r,o)=>{const i=document.getElementById(e);i.setAttribute("class","tile leftTile selectedTile"),n[t][r]=i}))}));let e=[[0,16,32,48,64,80],[153,154,155,156,157],[30,46,62,78],[84,100,116],[105,106],[215,216]];return e.forEach(((n,t)=>{e[t].forEach(((n,r,o)=>{const i=document.querySelector(".rightBoxes #r"+n);i.setAttribute("class","tile rightTile selectedTile"),e[t][r]=i}))})),{player:{partsLeft:22,parts:n},computer:{partsLeft:22,parts:e}}}();var e;for(n.computer.parts.forEach(((e,t)=>{n.computer.parts[t].forEach((e=>{console.log("enter"),e.addEventListener("click",(()=>{1==e.getAttribute("class").includes("selectedTile")&&(e.setAttribute("class",e.getAttribute("class").substring(0,e.getAttribute("class").indexOf(" ",5))),n.computer.partsLeft-=1)}))}))})),e=n.player,Math.round(224*Math.random()),e.parts.forEach(((n,t)=>{e.parts[t].forEach((n=>{1==n.getAttribute().includes("selectedTile")&&(n.setAttribute("class",n.getAttribute().subtring(0,n.getAttribute().indexOf("0",5))),e.partsLeft-=1)}))}));0!=n.player.partsLeft||0!=n.computer.partsLeft;)console.log("round")}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,